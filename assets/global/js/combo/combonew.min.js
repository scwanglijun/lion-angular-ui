(function(a){"use strict";function b(b,c){var f=arguments,g=b;b=f[0],c=f[1]|{},[].shift.apply(f),"undefined"==typeof b&&(b=g);var h,i=this.each(function(){var g=a(this);if(g.is("select")){var i=g.data("combo"),j="object"==typeof b&&b;if(i){if(j)for(var k in j)j.hasOwnProperty(k)&&(i.options[k]=j[k])}else{var l=a.extend({},d,a.fn.combo.defaults||{},g.data(),j);g.data("combo",i=new e(this,l,c))}"string"==typeof b&&(h=i[b]instanceof Function?i[b].apply(i,f):i.options[b])}});return"undefined"!=typeof h?h:i}this.ui=this.ui||{};var c=this.util,d=(this.ui,this.version,this.namespace+"-combo-",{id:"",language:"zh-CN",placeholder:"请选择",tags:!1,allowClear:!0,templateResult:"",data:null,multiple:!1,url:"",minimumResultsForSearch:-1,textfield:"text",valuefield:"id",selectedField:"selected",selected:!1,icon:!1}),e=function(b,d,e){e&&(e.stopPropagation(),e.preventDefault()),this.$element=a(b),this.id=this.$element.attr("id"),this.options=d,this.options.placeholder=this.$element.attr("placeholder")||this.options.placeholder,this.init(),c.isNotEmpty(this.options.url)&&this.loading(),this.data={},this.addLisenterEvent()};e.prototype={constructor:e,init:function(){var a=this.options;return this.$element.select2({minimumResultsForSearch:a.minimumResultsForSearch,placeholder:a.placeholder,allowClear:a.allowClear})},val:function(a){return c.isEmpty(a)?this.getVal():void this.setVal(a)},getVal:function(){var a=this.$element.select2("val");return c.isNotEmpty(a)?a:""},setVal:function(a){this.init().val(a).trigger("change")},clear:function(){this.init().val(null).trigger("change")},getData:function(){if(a.isEmptyObject(this.data)){var b=this,d=this.options.valuefield||"id",e=this.options.textfield||"text",f=this.options.selectedField||"selected",g={},h=[];b.$element.find("option").each(function(a,b){c.isNotEmpty(b.value)&&(g[d]=b.value,g[e]=b.innerText,b.selected&&(g[f]=b.selected),h.push(g),g={})}),this.data=h}return this.data},loading:function(){function b(b){e.data=b,a.isEmptyObject(b)||(e.$element.empty(),e.options.allowClear===!0&&e.$element.append('<option value=""></option>'),a.each(b,function(a,b){var c=b[i],d=b[g],j=b[h];c===!0?(f=d,e.$element.append('<option value="'+d+'" selected>'+j+"</option>")):e.$element.append('<option value="'+d+'" >'+j+"</option>")}),d(f))}function d(){return a.isEmptyObject(f)?void e.init().val(null).trigger("change"):void e.init().val([f]).trigger("change")}if(c.isEmpty(this.options.url))throw new Error("cannot call val() if initSelection() is not defined");c.post(this.options.url,{},b);var e=this,f=null,g=this.options.valuefield||"id",h=this.options.textfield||"text",i=this.options.selectedField||"selected"},refresh:function(){this.loading()},addLisenterEvent:function(){var b=a.Event("combo.change"),c=this;this.init().on("change",function(a){c.$element.trigger(b),b.isDefaultPrevented()})}};var f=a.fn.combo;a.fn.combo=b,a.fn.combo.Constructor=e,a.fn.combo.noConflict=function(){return a.fn.combo=f,this},a(function(){a(".lion-combo").each(function(){var c=a(this);b.call(c,c.data())})})}).call(lion,jQuery);